pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                script {
                    // Clean previous build artifacts
                    sh 'rm -rf node_modules'
                    // Install dependencies
                    sh 'npm install'
                    // Build project
                    sh 'npm run build'
                    // Archive artifacts
                    archiveArtifacts artifacts: 'dist/**', fingerprint: true
                }
            }
        }
        
        stage('Test') {
            steps {
                script {
                    // Run tests
                    sh 'npm test'
                }
            }
        }
        
        stage('Code Quality Analysis') {
            steps {
                script {
                    // Run code quality analysis tools
                    // Example: ESLint
                    sh 'npm run lint'
                }
            }
        }
        
        stage('Deploy') {
            steps {
                script {
                    // Example deployment steps:
                    // Deploy to a test environment (e.g., staging server)
                    // Replace this with your deployment process
                    sh 'ssh user@staging-server "cd /path/to/project && git pull && npm install && npm run build && pm2 restart server"'
                }
            }
        }
        
        stage('Release') {
            steps {
                script {
                    // Example release steps:
                    // Promote application to production environment
                    // Replace this with your release process
                    sh 'ssh user@production-server "cd /path/to/project && git pull && npm install && npm run build && pm2 restart server"'
                }
            }
        }
        
        stage('Monitoring and Alerting') {
            steps {
                script {
                    // Example monitoring and alerting steps:
                    // Integrate with monitoring tool (e.g., New Relic)
                    // Replace this with your monitoring/alerting setup
                    sh 'curl -X POST -d "status=success&message=Deployment Successful" https://api.newrelic.com/deployments.json'
                }
            }
        }
    }
}
